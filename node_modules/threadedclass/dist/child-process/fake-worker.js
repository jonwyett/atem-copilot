"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FakeWorker = void 0;
const worker_1 = require("./worker");
// This code is actually not run in a child process, but in the parent process
// (it's used when multithreading is turned off.)
// All code in this file should still be considered to be sandboxed in the "virtual child process".
class FakeWorker extends worker_1.Worker {
    constructor(cb) {
        super();
        this.disabledMultithreading = true;
        this.mockProcessSend = cb;
    }
    killInstance() {
        // throw new Error('Trying to kill a non threaded process!')
    }
    sendInstanceMessageToParent(handle, msg, cb) {
        const message = Object.assign(Object.assign({}, msg), {
            messageType: 'instance',
            cmdId: handle.cmdId++,
            instanceId: handle.id
        });
        if (cb)
            handle.queue[message.cmdId + ''] = { cb };
        // Send message to Parent:
        this.mockProcessSend(message);
    }
    sendChildMessageToParent(handle, msg, cb) {
        const message = Object.assign(Object.assign({}, msg), {
            messageType: 'child',
            cmdId: handle.cmdId++
        });
        if (cb)
            handle.queue[message.cmdId + ''] = { cb };
        // Send message to Parent:
        this.mockProcessSend(message);
    }
}
exports.FakeWorker = FakeWorker;
//# sourceMappingURL=fake-worker.js.map